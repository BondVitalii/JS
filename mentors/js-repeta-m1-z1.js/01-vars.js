/*
 * - Переменные и типы примитивов
 * - const и let
 * - Логирование с методом console.log()
 * - Уникальность идентификатора
 */

// const age = 10;
// const totalPrice = 200.74;
// const userName = 'Chelsy';
// const message = 'Добро пожаловать!';
// const isOpen = true;
// const shouldConfirm = false;

/*
 * * - Оператор typeof
 */

// const type = typeof isOpen;

// console.log(type);

/*
 * - Как window.alert() блокирует интерпретацию
 */

// console.log('До');
// alert('qweqweqwe');
// console.log('После');

/* Занятие-1

// const username = 'mango';

// console.log(username);

// console.log('username is', username);
// -----------------------------------
// const message = 'JavaScript is awesome!';
// alert(message);

// ========================================================================================================

// Для виведення даних існує два методи: console.log() і alert(). В круглих дужках зазначаємо ім'я змінної, значення якої необхідно вивести.

// Метод console.log(); ----------
// Метод console.log() В круглих дужках зазначаємо ім'я змінної, значення якої необхідно вивести.

// const message = 'JavaScript is awesome!';
// console.log(message); // JavaScript is awesome!

// Спочатку можна вказати будь-який описовий рядок, після чого поставити кому і вказати ім'я змінної.

// const username = 'Mango';
// console.log('Username is ', username); // Username is Mango

// ---------------------------------------------------------------

// Метод alert(); ----------
// Метод alert() виводить модальне вікно, текст якого відповідає значенню змінної (або літерала), яку передаємо в дужках.

// const message = 'JavaScript is awesome!';
// alert(message);

// console і alert - частина інтерфейсу window - глобального об'єкта, доступного при виконанні скрипту на веб-сторінці. Запис window.alert() зайвий, пишемо просто alert() або console.log(). Детальніше про це будемо говорити далі.

// ---------------------------------------------------------------

// Отримання даних
// Це також методи з інтерфейсу window. Результатом свого виконання вони повертають те, що було введено користувачем, тому результат їх роботи можна записати у змінну для подальшого використання.

// confirm(); ----------
// confirm() - виводить модальне вікно з повідомленням, і дві кнопки, Ok і Cancel. Натискаючи на Ok, результатом будет true, натискаючи на Cancel - повертається false.

// Просимо клієнта підтвердити бронювання готелю
// і зберігаємо результат роботи confirm у змінну

// const isComing = confirm('Please confirm hotel reservation');
// console.log(isComing);

// ---------------------------------------------------------------

// prompt(); ----------
// prompt() - виводить модальне вікно з полем введення і кнопками Ok і Cancel. Натискаючи на Ok, результатом буде те, що ввів користувач, у випадку Cancel - повертається null.

// Запитуємо назву готеля, в якому хотів би зупинитися клієнт
// і зберігаємо результат виклику prompt у змінну.

// const hotelName = prompt('Please enter desired hotel name');
// console.log(hotelName);

// Важлива особливість prompt полягає в тому, що незалежно від того, що ввів користувач, завжди повернеться рядок. Тобто, якщо користувач ввів 5, то повернеться не число 5, а рядок "5".

// const value = prompt('Please enter a number!');
// console.log(typeof value); // "string"
// console.log(value); // "5"

*/
